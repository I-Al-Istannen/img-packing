name: build-and-release

on: push

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup component add --toolchain stable cargo rustc
          rustup default stable
      - name: Build
        run: |
          cargo build --release
      - name: Ls stuff
        run: ls target/release

      - name: Rename binary
        if: matrix.os != 'windows-latest'
        run: mv target/release/img-packing img-packing-${{ matrix.os }}
      - name: Rename binary
        if: matrix.os == 'windows-latest'
        run: mv target/release/img-packing.exe img-packing-${{ matrix.os }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binaries-impl-${{ matrix.os }}
          path: img-packing-${{ matrix.os }}

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: Binaries
          pattern: binaries-impl-*

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: merge
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: Binaries

      - name: Rename binaries
        run: |
          mv img-packing-ubuntu-latest img-packing-linux
          mv img-packing-macos-latest img-packing-mac
          mv img-packing-windows-latest img-packing-windows.exe

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            img-packing-linux
            img-packing-mac
            img-packing-windows.exe
